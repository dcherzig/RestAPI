import sqlite3
from flask import Flask, jsonify, request
from sqlite3 import Error
from werkzeug.http import HTTP_STATUS_CODES

app = Flask(__name__)

#======================##initialize the db and fill in the first data##=============#
database = r"C:\Users\danie\Documents\GitHub\wdb\flask\database.db"
connection = sqlite3.connect('database.db', detect_types=sqlite3.PARSE_DECLTYPES)
with open('schema.sql') as f:
  connection.executescript(f.read())
cur = connection.cursor()
data = [{'titel': 'Risotto', 'zutaten':'Reis, Bouillon, Zwiebeln', 'beschreibung': 'Reis anduensten, abloeschen mit Bouillon, koecheln lassen'}, {'titel': 'Pancakes', 'zutaten':'Eier, Milch, Mehl', 'beschreibung': 'Alles zusammenmischen, kurz stehen lassen und dann in die Pfanne geben'}, {'titel': 'Pancakes', 'zutaten':'Eier, Milch, Mehl', 'beschreibung': 'Alles, kurz stehen lassen und dann in die Pfanne geben'}]
sql = "INSERT INTO rezepte(titel, zutaten, beschreibung) VALUES (?, ?,?);"

for rezept in data:
  cur.execute(sql, (rezept['titel'], rezept['zutaten'], rezept['beschreibung']))

connection.commit()
connection.close()
#=================================================================================#

#======================##Functions for the API##==================================#

def get_db():
  """Verbindung mit der sqlite3 Datenbank mit Name: database
  return: connection"""
  conn = None
  try:
    conn = sqlite3.connect(database)
  except Error as e:
    print(e)
  return conn


def get_post():
  """Input: -
  Funktion um alle Rezepte auszuw√§hlen
  Output: alle Rezepte in der Datenbank inkl. Titel, Zutaten und Beschreibung"""
  db = get_db()
  cursor = db.cursor()
  cursor.execute('SELECT * FROM rezepte')
  rezepte = [dict(id=row[0], titel=row[1], zutaten=row[2], beschreibung = row[3]) for row in cursor.fetchall()]
  if rezepte is not None:
    return rezepte